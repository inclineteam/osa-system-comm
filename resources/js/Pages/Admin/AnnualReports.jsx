import { useState, useEffect } from "react";
import axios from "axios";
import PanelLayout, { LayoutType } from "@/Layouts/PanelLayout";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import { toast } from "sonner";
import dayjs from "dayjs";
import DataTable from "react-data-table-component";

export default function AnnualReport({ auth }) {
  const [selectedYear, setSelectedYear] = useState(new Date());
  const [reports, setReports] = useState({ data: [], loading: true });

  useEffect(() => {
    axios
      .get(route("admin.annual_reports.index"))
      .then((response) => {
        const responseData = response.data || {};
        setReports({ data: responseData.reports || [], loading: false });
      })
      .catch((error) => {
        console.error("Error fetching reports:", error);
        setReports({ data: [], loading: false });
      });
  }, []);

  const handleYearChange = (date) => {
    setSelectedYear(date);
  };

  const handleSubmission = () => {
    // check if selectedYear is empty
    if (!selectedYear) {
      toast.error("Please select a year.");
      return;
    }

    axios
      .post(route("admin.annual_reports.create"), {
        data: {
          year: selectedYear.getFullYear(),
          user: auth.user.id,
        },
      })
      .then((data) => {
        // reloadpage
        toast.success("Report successfully generated.");
        window.location.reload();
      })
      .catch((error) => console.error("Error submitting report:", error));
  };

  const customStyles = {
    // rows: {
    //   style: {
    //     minHeight: "72px", // override the row height
    //   },
    // },
    headCells: {
      style: {
        padding: "10px 20px",
        fontSize: "14px",
        background: "#f8fafc",
        fontWeight: 700,
        color: "#475569",
      },
    },
    cells: {
      style: {
        padding: "10px 20px",
        fontSize: "14px",
      },
    },
  };

  const columns = [
    {
      name: "Report Year",
      cell: (row) => (
        <span>
          {new Date(row.created_at).toLocaleDateString("en-US", {
            year: "numeric",
          })}
        </span>
      ),
    },
    {
      name: "Generated By",
      cell: (row) => <>{row.generated_by}</>,
    },
    {
      name: "Generated At",
      cell: (row) => (
        <>
          <span>{dayjs(row.generated_at).format("MMM d, YYYY")}</span>
        </>
      ),
    },
    {
      name: "Actions",
      cell: (row) => (
        <>
          <a
            href={route("admin.annual_reports.specific", row.id)}
            className="transition bg-indigo-600 text-white px-3 py-2 text-sm font-medium shadow hover:bg-indigo-400 rounded-md"
          >
            Show
          </a>
          <button
            onClick={() => {
              setReports({
                data: reports.data.filter((data) => data.id !== row.id),
                loading: true,
              });

              axios
                .delete(route("admin.annual_reports.delete", row.id))
                .then(() => {
                  toast.success("Report successfully deleted.");
                  setReports({
                    data: reports.data.filter((data) => data.id !== row.id),
                    loading: false,
                  });
                });
            }}
            className="transition bg-red-600 text-white px-3 py-2 text-sm font-medium shadow hover:bg-red-400 rounded-md ml-2"
          >
            Delete
          </button>
        </>
      ),
    },
  ];

  return (
    <PanelLayout
      layout={LayoutType.SUPER_ADMIN}
      defaultActiveLink="generated reports annually"
    >
      <div className="content-wrapper">
        <div className="bg-white p-6">
          <div className="flex bg-white flex-col">
            <h1 className="text-xl font-bold mb-2 leading-none">
              Generate annual report
            </h1>
            <p className="border-b border-slate-200 pb-4 leading-none mb-4 text-slate-500">
              Generate a detailed report regarding the submitted reports for
              you.
            </p>
            <div>
              <p className="font-bold mb-0">Select Year</p>
            </div>
            <DatePicker
              selected={selectedYear}
              onChange={handleYearChange}
              dateFormat="yyyy"
              showYearPicker
              scrollableYearDropdown
              yearDropdownItemNumber={10}
              customInput={
                <input className="border-slate-300 rounded-md hover:border-slate-400  " />
              }
            />
            <button
              onClick={() => handleSubmission()}
              className="mt-4 w-max transition bg-indigo-600 mb-3 text-white px-3 py-2 text-sm font-medium shadow hover:bg-indigo-400 rounded-md flex"
            >
              <i className="fi fi-rs-add-document text-base mr-2"></i>
              <span>Generate</span>
            </button>
          </div>

          <hr className="my-8 border-slate-400" />

          <h1 className="mt-4 text-xl font-bold mb-2 leading-none">
            All annual reports
          </h1>
          <p className="border-b border-slate-200 pb-4 leading-none mb-4 text-slate-500">
            Check out all the generated reports.
          </p>

          <div className="mt-4 border border-slate-200 rounded-md overflow-hidden">
            <DataTable
              columns={columns}
              pagination
              data={reports.data}
              customStyles={customStyles}
            />
          </div>
        </div>
      </div>
    </PanelLayout>
  );
}
